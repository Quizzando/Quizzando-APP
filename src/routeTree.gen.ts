/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './views/__root'
import { Route as protectedIndexRouteImport } from './views/(protected)/index'
import { Route as authRegisterRouteImport } from './views/(auth)/register'
import { Route as authLoginRouteImport } from './views/(auth)/login'

const protectedIndexRoute = protectedIndexRouteImport.update({
  id: '/(protected)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/': typeof protectedIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/': typeof protectedIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(protected)/': typeof protectedIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/register' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/register' | '/'
  id: '__root__' | '/(auth)/login' | '/(auth)/register' | '/(protected)/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  protectedIndexRoute: typeof protectedIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(protected)/': {
      id: '/(protected)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  protectedIndexRoute: protectedIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
