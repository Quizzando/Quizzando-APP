/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './views/__root'
import { Route as SobreRouteImport } from './views/sobre'
import { Route as AuthRouteImport } from './views/_auth'
import { Route as AppRouteImport } from './views/_app'
import { Route as IndexRouteImport } from './views/index'
import { Route as AuthRegisterRouteImport } from './views/_auth/register'
import { Route as AuthLoginRouteImport } from './views/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './views/_auth/forgot-password'
import { Route as AppPerfilRouteImport } from './views/_app/perfil'
import { Route as AppCursosIndexRouteImport } from './views/_app/cursos/index'
import { Route as AppCriarDisciplinaRouteImport } from './views/_app/criar/disciplina'
import { Route as AppCriarCursoRouteImport } from './views/_app/criar/curso'
import { Route as AppCursosCourseIdIndexRouteImport } from './views/_app/cursos/$courseId/index'
import { Route as AppCursosCourseIdDisciplinaDisciplineIdRouteImport } from './views/_app/cursos/$courseId/disciplina.$disciplineId'

const SobreRoute = SobreRouteImport.update({
  id: '/sobre',
  path: '/sobre',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AppPerfilRoute = AppPerfilRouteImport.update({
  id: '/perfil',
  path: '/perfil',
  getParentRoute: () => AppRoute,
} as any)
const AppCursosIndexRoute = AppCursosIndexRouteImport.update({
  id: '/cursos/',
  path: '/cursos/',
  getParentRoute: () => AppRoute,
} as any)
const AppCriarDisciplinaRoute = AppCriarDisciplinaRouteImport.update({
  id: '/criar/disciplina',
  path: '/criar/disciplina',
  getParentRoute: () => AppRoute,
} as any)
const AppCriarCursoRoute = AppCriarCursoRouteImport.update({
  id: '/criar/curso',
  path: '/criar/curso',
  getParentRoute: () => AppRoute,
} as any)
const AppCursosCourseIdIndexRoute = AppCursosCourseIdIndexRouteImport.update({
  id: '/cursos/$courseId/',
  path: '/cursos/$courseId/',
  getParentRoute: () => AppRoute,
} as any)
const AppCursosCourseIdDisciplinaDisciplineIdRoute =
  AppCursosCourseIdDisciplinaDisciplineIdRouteImport.update({
    id: '/cursos/$courseId/disciplina/$disciplineId',
    path: '/cursos/$courseId/disciplina/$disciplineId',
    getParentRoute: () => AppRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sobre': typeof SobreRoute
  '/perfil': typeof AppPerfilRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/criar/curso': typeof AppCriarCursoRoute
  '/criar/disciplina': typeof AppCriarDisciplinaRoute
  '/cursos': typeof AppCursosIndexRoute
  '/cursos/$courseId': typeof AppCursosCourseIdIndexRoute
  '/cursos/$courseId/disciplina/$disciplineId': typeof AppCursosCourseIdDisciplinaDisciplineIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sobre': typeof SobreRoute
  '/perfil': typeof AppPerfilRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/criar/curso': typeof AppCriarCursoRoute
  '/criar/disciplina': typeof AppCriarDisciplinaRoute
  '/cursos': typeof AppCursosIndexRoute
  '/cursos/$courseId': typeof AppCursosCourseIdIndexRoute
  '/cursos/$courseId/disciplina/$disciplineId': typeof AppCursosCourseIdDisciplinaDisciplineIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/sobre': typeof SobreRoute
  '/_app/perfil': typeof AppPerfilRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_app/criar/curso': typeof AppCriarCursoRoute
  '/_app/criar/disciplina': typeof AppCriarDisciplinaRoute
  '/_app/cursos/': typeof AppCursosIndexRoute
  '/_app/cursos/$courseId/': typeof AppCursosCourseIdIndexRoute
  '/_app/cursos/$courseId/disciplina/$disciplineId': typeof AppCursosCourseIdDisciplinaDisciplineIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sobre'
    | '/perfil'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/criar/curso'
    | '/criar/disciplina'
    | '/cursos'
    | '/cursos/$courseId'
    | '/cursos/$courseId/disciplina/$disciplineId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sobre'
    | '/perfil'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/criar/curso'
    | '/criar/disciplina'
    | '/cursos'
    | '/cursos/$courseId'
    | '/cursos/$courseId/disciplina/$disciplineId'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/sobre'
    | '/_app/perfil'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/register'
    | '/_app/criar/curso'
    | '/_app/criar/disciplina'
    | '/_app/cursos/'
    | '/_app/cursos/$courseId/'
    | '/_app/cursos/$courseId/disciplina/$disciplineId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  SobreRoute: typeof SobreRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sobre': {
      id: '/sobre'
      path: '/sobre'
      fullPath: '/sobre'
      preLoaderRoute: typeof SobreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/perfil': {
      id: '/_app/perfil'
      path: '/perfil'
      fullPath: '/perfil'
      preLoaderRoute: typeof AppPerfilRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/cursos/': {
      id: '/_app/cursos/'
      path: '/cursos'
      fullPath: '/cursos'
      preLoaderRoute: typeof AppCursosIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/criar/disciplina': {
      id: '/_app/criar/disciplina'
      path: '/criar/disciplina'
      fullPath: '/criar/disciplina'
      preLoaderRoute: typeof AppCriarDisciplinaRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/criar/curso': {
      id: '/_app/criar/curso'
      path: '/criar/curso'
      fullPath: '/criar/curso'
      preLoaderRoute: typeof AppCriarCursoRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/cursos/$courseId/': {
      id: '/_app/cursos/$courseId/'
      path: '/cursos/$courseId'
      fullPath: '/cursos/$courseId'
      preLoaderRoute: typeof AppCursosCourseIdIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/cursos/$courseId/disciplina/$disciplineId': {
      id: '/_app/cursos/$courseId/disciplina/$disciplineId'
      path: '/cursos/$courseId/disciplina/$disciplineId'
      fullPath: '/cursos/$courseId/disciplina/$disciplineId'
      preLoaderRoute: typeof AppCursosCourseIdDisciplinaDisciplineIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppPerfilRoute: typeof AppPerfilRoute
  AppCriarCursoRoute: typeof AppCriarCursoRoute
  AppCriarDisciplinaRoute: typeof AppCriarDisciplinaRoute
  AppCursosIndexRoute: typeof AppCursosIndexRoute
  AppCursosCourseIdIndexRoute: typeof AppCursosCourseIdIndexRoute
  AppCursosCourseIdDisciplinaDisciplineIdRoute: typeof AppCursosCourseIdDisciplinaDisciplineIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppPerfilRoute: AppPerfilRoute,
  AppCriarCursoRoute: AppCriarCursoRoute,
  AppCriarDisciplinaRoute: AppCriarDisciplinaRoute,
  AppCursosIndexRoute: AppCursosIndexRoute,
  AppCursosCourseIdIndexRoute: AppCursosCourseIdIndexRoute,
  AppCursosCourseIdDisciplinaDisciplineIdRoute:
    AppCursosCourseIdDisciplinaDisciplineIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  SobreRoute: SobreRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
